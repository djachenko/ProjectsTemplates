Разметка карты делается через веб-разметчик (FloorsEditor):

1. Подключить изображения этажей (надо обязательно использовать те же картинки, какие будут затем положены в приложение -- координаты измеряются в пикселях, и размер важен). Это делается редактированием editor.html, где в списке с элементами <a href="#" role="button" class="btn btn-default btn-lg open-floor" floor="0" url="img/floors/building_new_floor_0.png">Floor 0</a> надо заменить значения url на пути к целевым картинкам.
2. Дальше в браузере выбрать соответствующий этаж и начать его размечать.
3. Сначала надо протыкать endpoints и waypoints. Waypoints сразу проставляются хорошими, с ними ничего делать не надо. Эндпойнтам надо задать айдишники, иначе их нельзя будет соединять с вэйпойнтами и между собой. "Хорошие" эндпойнты, с айдишниками, показаны залитыми красным кругами, без -- оранжевыми окружностями.
3. Проставив все пойнты, их надо соединить. Включив режим Connection, надо попарно тыкать точки, которые надо соединить. Важно: соединение ведется по айдишникам, и если вы потом решите поменять id точки, надо будет удалить все ее соединения с другими и создать заново.
4. Если надо отредактировать точку или удалить соединение, надо выбрать режим Cursor и щелкнуть по редактируемому объекту.
5. В конце, чтобы сохранить результат, надо нажать кнопку Generate JSON под картой и скопировать добавленный в поле JSON Output/Input поле текст.

Если нужно отредактировать созданную ранее разметку, можно ее скопировать в это поле и нажать кнопку Load JSON. Карта заполнится, но может лагать.

Стоит отдельно размечать новый и старый корпус (зачем, будет объяснено далее)


Разметчик выдает данные в не особо читаемом неиерархичном виде, поэтому его надо обработать. Для этой цели есть скрипт на Python (nsu_map_converter). Используется он так:

1. Закинуть в папку jsons JSON-файлы с данными, полученными из разметчика.
2. Запустить скрипт z_coordinator.py
3. Встроить в приложение появившийся файл final.json.

Что происходит на этапе 2? Координатор для каждого из файлов по очереди вызывает три других скрипта: коннектор, постфиксер и конвертер.

Коннектор соединяет этажи. В разметчике нельзя протянуть коннект с одного этажа на другой, а лестницы и лифты существуют. Их список захаркожен в переменно __CONNECTIONS в a_connector.py, и загруженный json будет ими дополнен.
Постфиксер добавляет к айдишникам точек постфиксы (_m для главного корпуса ("main"), _p для перехода, _l для лаба, _n для нового и _r для ректорской свечки). Это нужно, чтобы можно было различить аудитории 232 в ректорском, главном и лабе, например. Какой постфикс приставить, определяется хардкодом в координаторе -- обычно двух новых корпусов за раз не добавляется. Один разметили -- прогнали скрипт -- вставили результат после скрипта в разметчик -- разметили другой.
Конвертер превращает данные из того вида, в каком из выдает разметчик, в красивый иерархичный.
